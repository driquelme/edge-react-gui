// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Request should render with loaded props 1`] = `
<SceneWrapper
  background="header"
  hasTabs={false}
>
  <View
    style={
      Object {
        "flex": 1,
        "justifyContent": "flex-start",
        "paddingHorizontal": 22,
      }
    }
  >
    <WithTheme(EdgeTextComponent)
      style={
        Object {
          "fontFamily": "Quicksand-Medium",
          "fontSize": 45,
          "marginBottom": 11,
        }
      }
    >
      Request
    </WithTheme(EdgeTextComponent)>
    <ExchangedFlipInput
      exchangeSecondaryToPrimaryRatio={Object {}}
      forceUpdateGuiCounter={0}
      headerCallback={[Function]}
      headerText="Receive to undefined"
      inputAccessoryViewID=""
      isEditable={true}
      isFiatOnTop={true}
      isFocus={false}
      keyboardVisible={false}
      onExchangeAmountChanged={[Function]}
      onNext={[Function]}
      overridePrimaryExchangeAmount=""
      primaryCurrencyInfo={Object {}}
      secondaryCurrencyInfo={Object {}}
      topReturnKeyType="done"
    />
    <InputAccessoryView
      backgroundColor="#FFFFFF"
      nativeID="cancelHeaderId"
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <ForwardRef
          onPress={[Function]}
          style={
            Object {
              "paddingHorizontal": 22,
              "paddingVertical": 11,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#0073D9",
              }
            }
          >
            
          </Text>
        </ForwardRef>
        <ForwardRef
          onPress={[Function]}
          style={
            Object {
              "paddingHorizontal": 22,
              "paddingVertical": 11,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#0073D9",
              }
            }
          >
            Done
          </Text>
        </ForwardRef>
      </View>
    </InputAccessoryView>
    <View
      onLayout={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "aspectRatio": 1,
          "backgroundColor": "#FFFFFF",
          "borderRadius": 11,
          "flex": 1,
          "margin": 45,
          "padding": 11,
        }
      }
    />
    <ForwardRef
      onPress={[Function]}
    >
      <RightChevronButton
        onPress={[Function]}
        paddingRem={
          Array [
            0,
            0,
            0,
            0,
          ]
        }
        text="Your Receiving Wallet Address"
      />
      <WithTheme(EdgeTextComponent)
        style={
          Object {
            "fontSize": 17,
          }
        }
      />
    </ForwardRef>
  </View>
  <ShareButtons
    copyToClipboard={[Function]}
    fioAddressModal={[Function]}
    shareViaShare={[Function]}
  />
</SceneWrapper>
`;

exports[`Request should render with loading props 1`] = `
<ActivityIndicator
  animating={true}
  color="#FFFFFF"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "alignSelf": "center",
      "flex": 1,
    }
  }
/>
`;
